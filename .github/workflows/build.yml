name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch
env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/fpformidling

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: fpformidling_unit
          POSTGRES_PASSWORD: fpformidling_unit
          POSTGRES_DB: fpformidling_unit
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - run:  git fetch --prune --unshallow

      - name: Cache maven repository
        uses: actions/cache@v1
        with:
          path: ~/.github/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Hent tag
        run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Kompiler
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"
          mvn jacoco:prepare-agent install -e --batch-mode --settings .github/.m2/settings.xml   -Djacoco.destFile=$(pwd)/target/jacoco.exec
          mvn jacoco:report sonar:sonar -e --batch-mode --settings .github/.m2/settings.xml -Djacoco.dataFile=$(pwd)/target/jacoco.exec  -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=navikt_fpformidling
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Bygg, tag og push Docker image
        run: |
          docker build  --tag $IMAGE .
          echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push $IMAGE_BASE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

